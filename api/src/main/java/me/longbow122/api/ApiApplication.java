package me.longbow122.api;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.context.properties.ConfigurationPropertiesScan;
import org.springframework.context.annotation.ComponentScan;

@SpringBootApplication
@ConfigurationPropertiesScan("me.longbow122.configuration.properties")
@ComponentScan(basePackages = {
	"me.longbow122.datamodel.repository",
	"me.longbow122.service",
	"me.longbow122.configuration",
	"me.longbow122.api.controller",
})
public class ApiApplication {


	//TODO NEED TO TEST AND SEE WHAT ANNOTATIONS WE CAN CUT OUT COS WE HAVE QUITE A FEW HERE THAT ARE POTENTIALLY REDUNDANT

	//TODO NEED TO FIND OUT HOW WE CAN CALL METHODS FROM THE BOT LAYER AND USE THEM HERE WITH NO ISSUES. NEED TO MAKE IT SO THAT WE CAN TRIGGER THE SENDING OF A MESSAGE
	// FROM THIS LAYER.

	//TODO NEED TO IMPLEMENT CONTROLLERS TO HANDLE THE INTAKE OF RELEVANT DATA, NEED TO FIND A WAY TO PROPERLY TEST THIS TO ENSURE IT IS DOING WHAT IT NEEDS TO BE DOING RIGHT

	//TODO NEED TO BE ABLE TO TAKE IN THE ID OF A FORM, AND GET THE QUESTIONS THE USER ANSWERED, AND THE ANSWERS OF THAT QUESTION.
	// NEED TO THEN TRANSLATE THAT INTO INPUT THAT WE CAN WORK WITH, DEPENDING ON WHAT WAS ANSWERED.
	// CAN USE GOOGLE SCRIPT TO DIFFERENTIATE BETWEEN WHAT TYPE OF FORM SOMEONE ANSWERED, BUT STILL NEED TO FIND A WAY TO PROVIDE ANSWERS TO THE QUESTIONS THE USER ANSWERED.

	//TODO NEED TO IMPLEMENT FORMDTO CLASS THAT CAN HANDLE THE INPUT WE INTEND ON GETTING FROM GOOGLE FORMS

	//TODO NEED TO ENSURE WE CAN DEPLOY AND RUN THIS API ALONGSIDE THE BOT JAR IN SYNC.
	// NEED TO ENSURE API CAN CALL METHODS FROM BOT JAR AS NEEDED, WHILE STILL ENSURING THAT BOT JAR RUNS THE NEEDED CODE AND SENDS THE RIGHT MESSAGES TO DISCORD.

	// ! Testing information above
	// ! Debug information below

	//TODO API IS RUNNING AN INSTANCE OF THE BOT, WHICH IT SHOULDN'T BE.
	// IT IS TAKING IN COMMANDS AND ACTING LIKE THE BOT IS (WHICH IT SHOULDN'T BE)
	// BUT IS ALSO SOMEHOW NOT INTERFERING AND WORKING AS INTENDED, ALONGSIDE THE RUNNING BOT JAR, WHICH IS GOOD.
	// NEED TO FIND A WAY TO STOP JDA FROM RUNNING IN THE API, SO WE CAN LET THE BOT JAR HANDLE IT.

	//TODO MIGHT BE SOMETHING TO DO WITH THE BEAN CREATION, WHEN WE TRY AUTOWIRING IN FORMSERVICE FOR FORMCONTROLLER
	// FORMSERVICE AUTOWIRES IN DISCORDCONFIGURER, WHICH HAS THE JDA BEAN RUN ON CREATION, SO THAT WE CAN TAKE AND USE IT.
	// IF THIS BEAN IS RUNNING ON CREATION, THEN WE WILL HAVE IT COME UP AND START AN INSTANCE OF THE BOT, WHICH IS SOMETHING WE DON'T WANT TO DO.

	//TODO ONLY QUESTION IS... HOW DO WE STOP THE ABOVE?
	public static void main(String[] args) {
		SpringApplication.run(ApiApplication.class, args);
	}
}
