# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  pull_request:
    branches: [ "main" ]

permissions:
  # Used for Dependabot Pull Requests. We need to ensure that builds pass when we update dependencies automatically. This can be done by granting contents: write
  # Letting them create releases.
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.2.0
    - name: Set up JDK 21
      uses: actions/setup-java@v4.4.0
      with:
        java-version: '21'
        distribution: 'temurin'
        check-latest: 'true'
    - name: Build with Maven
      run: mvn clean install
      #TODO MIGHT BE A MAVEN ISSUE WITH US NOT PICKINMG UP THE NESTED TEST CLASS, SEE IF WE CAN FORCE THE VERSION OF MAVEN
      #TODO WHEN BUILDING, THAT MIGHT HELP PICK UP NESTED TEST CLASSES.
      # Maven Package achieves the same results, but does not install the packaged build into the local Mvn Repository.
      #run: mvn -B package --file pom.xml 
      

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@v4.1.1
